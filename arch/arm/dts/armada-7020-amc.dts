/*
 * Copyright (C) 2017 Marvell Technology Group Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPLv2 or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This library is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This library is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/*
 * Device Tree file for Marvell Armada 7020 AMC board
 * Boot device: NAND
 */

#include "armada-70x0.dtsi"
#include "armada-70x0-dev-info.dtsi"

/ {
	model = "Marvell Armada 7020 AMC";
	compatible = "marvell,armada7020-amc", "marvell,armada7020",
		     "marvell,armada-ap806";

	chosen {
		stdout-path = "serial0:115200n8";
	};

	aliases {
		i2c0 = &cpm_i2c0;
		i2c1 = &cpm_mss_i2c0;
		i2c2 = &ap_i2c0;
		spi0 = &ap_spi0;
	};

	memory@00000000 {
		device_type = "memory";
		reg = <0x0 0x0 0x0 0x80000000>; /* 2GB */
	};

	simple-bus {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_smi0: reg_smi {
			compatible = "regulator-fixed";
			regulator-name = "reg-smi";
			/* set GPIO[31] to 0 to connect SMI to main switch board */
			gpio = <&cpm_gpio0 31 GPIO_ACTIVE_HIGH>;
		};

		reg_i2c0: reg_i2c {
			compatible = "regulator-fixed";
			regulator-name = "reg-i2c";
			enable-active-high;
			 /* set GPIO[44] to 1 to connect ap_i2c0 to main switch board */
			gpio = <&cpm_gpio1 12 GPIO_ACTIVE_HIGH>;
		};
	};
};

&ap_pinctl {
	   /* MPP Bus:
	    * SPI  [0-3]
	    * I2C  [4-5]
	    * UART0 [11,19]
	    */
		  /* 0 1 2 3 4 5 6 7 8 9 */
	pin-func = < 3 3 3 3 3 3 0 0 0 0
		     0 3 0 0 0 0 0 0 0 3 >;
};

&uart0 {
	status = "okay";
};

&ap_i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&ap_i2c0_pins>;
	enable_gpios = <&reg_i2c0>;
	status = "okay";
};

&ap_spi0 {
	status = "okay";

	spi-flash@0 {
		#address-cells = <0x1>;
		#size-cells = <0x1>;
		compatible = "jedec,spi-nor";
		reg = <0x0>;
		spi-max-frequency = <20000000>;
	};
};

&cpm_nand {
	status = "okay";
};

&cpm_pcie0 {
	num-lanes = <4>;
	ranges =
		/* downstream I/O */
		<0x81000000 0 0xfa000000 0  0xfa000000 0 0x10000
		/* non-prefetchable memory */
		0x82000000 0 0xf6000000 0  0xf6000000 0 0x4000000>;

	status = "okay";
};

&cpm_i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&cpm_i2c0_pins>;
	status = "okay";
	clock-frequency = <100000>;
};

&cpm_mss_i2c0 {
	status = "okay";
	clock-frequency = <100000>;
};

&cpm_pinctl {
		/* MPP Bus:
		 * RGMII [0-11]
		 * Device Bus [13-27]
		 * SATA1 [28]
		 * UART0 [29-30]
		 * SMI	 [32,34]
		 * XSMI  [35-36]
		 * I2C0	 [37-38]
		 * I2C1	 [50-51]
		 * SD	 [49, 55-61]
		 */
		/*   0    1    2    3    4    5    6    7    8    9 */
	pin-func = < 3    3    3    3    3    3    3    3    3    3
		     3    3    0    2    3    1    1    1    1    1
		     1    1    1    1    1    1    1    1    9    0xA
		     0xA  0    7    0    7    7    7    2    2    0xFF
		     0xFF 0xFF 0xFF 0xFF 0    0    0    0    0    0xA
		     2    2    0    0    0    0xB  0xE  0xE  0xE  0xE
		     0xE  0xE  0>;
};

&cpm_sata0 {
	status = "okay";
};

&cpm_scsi {
	status = "okay";
};

&cpm_comphy {
	phy0 {
		phy-type = <COMPHY_TYPE_PEX0>;
		phy-speed = <COMPHY_SPEED_5G>;
	};

	phy1 {
		phy-type = <COMPHY_TYPE_PEX0>;
		phy-speed = <COMPHY_SPEED_5G>;
	};

	phy2 {
		phy-type = <COMPHY_TYPE_PEX0>;
		phy-speed = <COMPHY_SPEED_5G>;
	};

	phy3 {
		phy-type = <COMPHY_TYPE_PEX0>;
		phy-speed = <COMPHY_SPEED_5G>;
	};

	phy4 {
		phy-type = <COMPHY_TYPE_SFI>;
		phy-speed = <COMPHY_SPEED_10_3125G>;
	};

	phy5 {
		phy-type = <COMPHY_TYPE_SATA1>;
		phy-speed = <COMPHY_SPEED_5G>;
	};
};

&cpm_usb3_0 {
	status = "okay";
};

&cpm_utmi0 {
	status = "okay";
};

&cpm_sdhci0 {
	status = "okay";
	bus-width = <4>;
	no-1-8-v;
	non-removable;
};

&cpm_mdio {
	enable_gpios = <&reg_smi0>;
	phy1: ethernet-phy@1 {
		reg = <1>;
	};
};

&cpm_ethernet {
	status = "okay";
};

&cpm_eth0 {
	status = "okay";
	phy-mode = "sfi";
};

&cpm_eth1 {
	status = "okay";
	phy = <&phy1>;
	phy-mode = "rgmii-id";
};
